import { DynamoDBClient } from "@aws-sdk/client-dynamodb";
import {
  DynamoDBDocumentClient,
  PutCommand,
  ScanCommand,
} from "@aws-sdk/lib-dynamodb";
import { v4 as uuidv4 } from "uuid";

const client = new DynamoDBClient({});

const ddbDocClient = DynamoDBDocumentClient.from(client); // client is DynamoDB client

const tableName = process.env.TEAM_TABLE_NAME;

console.log(`Using DynamoDB table: ${tableName}`);

export const handler = async (event, context) => {
  let body = "SUCCESS";
  let statusCode = 200;
  const headers = {
    "Content-Type": "application/json",
  };

  try {
    switch (`${event.httpMethod} ${event.path}`) {
      //     case "DELETE /teams/{id}":
      //       console.log("DELETE /teams/{id} invoked");
      //       body = "DELETE /teams/{id} successful";
      //       //   await dynamo.send(
      //       //     new DeleteCommand({
      //       //       TableName: tableName,
      //       //       Key: {
      //       //         id: event.pathParameters.id,
      //       //       },
      //       //     })
      //       //   );
      //       //   body = `Deleted team ${event.pathParameters.id}`;
      //       break;
      //     case "GET /teams/{id}":
      //       console.log("GET /teams/{id} invoked");
      //       body = "GET /teams/{id} successful";
      //       // body = await dynamo.send(
      //       //   new GetCommand({
      //       //     TableName: tableName,
      //       //     Key: {
      //       //       id: event.pathParameters.id,
      //       //     },
      //       //   })
      //       // );
      //       // body = body.Item;
      //       break;
      case "GET /teams":
        console.log("GET /teams invoked");
        body = await ddbDocClient.send(
          new ScanCommand({ TableName: tableName })
        );
        body = body.Items;
        break;
      case "POST /teams":
        console.log("POST /teams invoked");
        console.log(`This is the parsed req: ${event.body}`);
        const req = JSON.parse(event.body);

        const input = {
          TableName: tableName,
          Item: {
            id: "12345678999999999", //uuidv4(),
            name: req.name,
          },
        };
        const command = new PutCommand(input);
        body = await ddbDocClient.send(command);

        break;
      //     case "PUT /teams":
      //       console.log("PUT /teams invoked");
      //       body = "PUT /teams successful";
      //       // let requestJSON = JSON.parse(event.body);
      //       // await dynamo.send(
      //       //   new PutCommand({
      //       //     TableName: tableName,
      //       //     Item: {
      //       //       id: requestJSON.id,
      //       //       name: requestJSON.name,
      //       //     },
      //       //   })
      //       // );
      //       // body = `Put team ${requestJSON.id}`;
      //       break;
      default:
        throw new Error(`Unsupported route: "${event.routeKey}"`);
    }
  } catch (err) {
    statusCode = 400;
    body = err.message;
  } finally {
    body = JSON.stringify(body);
  }

  return {
    statusCode,
    body,
    headers,
  };
};
